[{"data":1,"prerenderedAt":120},["ShallowReactive",2],{"article":3},[4],{"id":5,"title":6,"body":7,"date":110,"description":111,"extension":112,"image":113,"meta":114,"navigation":115,"path":116,"seo":117,"stem":118,"tags":113,"__hash__":119},"article/article/bates-shuffle.md","Demystifying the Bates Shuffle: True Randomness",{"type":8,"value":9,"toc":101},"minimark",[10,19,27,32,44,51,55,62,65,69,82,86,94,98],[11,12,13,14,18],"p",{},"When developers hear \"shuffle\", we usually think of the Fisher-Yates algorithm — and rightly so. It’s efficient, unbiased, and has been the gold standard for decades. But what if we need randomness that feels more ",[15,16,17],"em",{},"natural","?",[11,20,21,22,26],{},"Enter the ",[23,24,25],"strong",{},"Bates Shuffle",".",[28,29,31],"h2",{"id":30},"what-is-the-bates-shuffle","What Is the Bates Shuffle?",[11,33,34,35,38,39,43],{},"The Bates Shuffle is derived from statistical methods, specifically from the ",[23,36,37],{},"Bates distribution",", which is formed by averaging ",[40,41,42],"code",{},"n"," uniform random variables. Instead of a flat random distribution like Fisher-Yates, this shuffle produces a smoother, bell-shaped randomness — similar to a Gaussian curve.",[11,45,46,47,50],{},"In web development, this can be useful in cases where ",[23,48,49],{},"uniform randomness looks \"too random\""," and jarring, especially in animations, transitions, or procedural content.",[28,52,54],{"id":53},"implementation","Implementation",[11,56,57],{},[58,59],"img",{"alt":60,"src":61},"Portfolio","/media/img/bates-shuffle.jpg",[11,63,64],{},"Here, each index is given an averaged “random value” that dictates its position. More samples = smoother randomness.",[28,66,68],{"id":67},"when-should-you-use-it","When should you use it?",[70,71,72,76,79],"ul",{},[73,74,75],"li",{},"UI Animations: Staggering animations based on weighted randomness can appear more organic.",[73,77,78],{},"Music/Media Shuffling: Avoiding \"bad luck\" when clicking the shuffle button.",[73,80,81],{},"Procedural Generation: Games or simulations where uniform randomness looks artificial.",[28,83,85],{"id":84},"downsides","Downsides",[70,87,88,91],{},[73,89,90],{},"Performance: Slower than fisher-yates",[73,92,93],{},"Bias: Favors the center of the range",[28,95,97],{"id":96},"summary","Summary",[11,99,100],{},"While not a replacement for fisher-yates in most cases, the bates shuffle is a hidden gem for frontend devs aiming for natural-feeling randomness. Sometimes, math that looks less random ends up feeling more real.",{"title":102,"searchDepth":103,"depth":103,"links":104},"",2,[105,106,107,108,109],{"id":30,"depth":103,"text":31},{"id":53,"depth":103,"text":54},{"id":67,"depth":103,"text":68},{"id":84,"depth":103,"text":85},{"id":96,"depth":103,"text":97},"2025-07-22T00:00:00.000Z","When developers hear \"shuffle\", we usually think of the Fisher-Yates algorithm — and rightly so. It’s efficient, unbiased, and has been the gold standard for decades. But what if we need randomness that feels more natural?","md",null,{},true,"/article/bates-shuffle",{"title":6,"description":111},"article/bates-shuffle","ivaVOIfsOW3_oy6VtAqYaqVnDa2L-bp0E2LjFyufmCY",1753181918121]