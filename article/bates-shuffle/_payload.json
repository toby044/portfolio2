[{"data":1,"prerenderedAt":173},["ShallowReactive",2],{"article":3,"/article/bates-shuffle":114},[4],{"id":5,"title":6,"body":7,"date":103,"description":104,"extension":105,"image":106,"meta":107,"navigation":108,"path":109,"seo":110,"stem":111,"tags":112,"__hash__":113},"article/article/bates-shuffle.md","Demystifying the Bates Shuffle: True Randomness",{"type":8,"value":9,"toc":94},"minimark",[10,19,27,32,44,51,55,58,62,75,79,87,91],[11,12,13,14,18],"p",{},"When developers hear \"shuffle\", we usually think of the Fisher-Yates algorithm — and rightly so. It’s efficient, unbiased, and has been the gold standard for decades. But what if we need randomness that feels more ",[15,16,17],"em",{},"natural","?",[11,20,21,22,26],{},"Enter the ",[23,24,25],"strong",{},"Bates Shuffle",".",[28,29,31],"h2",{"id":30},"what-is-the-bates-shuffle","What Is the Bates Shuffle?",[11,33,34,35,38,39,43],{},"The Bates Shuffle is derived from statistical methods, specifically from the ",[23,36,37],{},"Bates distribution",", which is formed by averaging ",[40,41,42],"code",{},"n"," uniform random variables. Instead of a flat random distribution like Fisher-Yates, this shuffle produces a smoother, bell-shaped randomness — similar to a Gaussian curve.",[11,45,46,47,50],{},"In web development, this can be useful in cases where ",[23,48,49],{},"uniform randomness looks \"too random\""," and jarring, especially in animations, transitions, or procedural content.",[28,52,54],{"id":53},"implementation","Implementation",[11,56,57],{},"Here, each index is given an averaged “random value” that dictates its position. More samples = smoother randomness.",[28,59,61],{"id":60},"when-should-you-use-it","When should you use it?",[63,64,65,69,72],"ul",{},[66,67,68],"li",{},"UI Animations: Staggering animations based on weighted randomness can appear more organic.",[66,70,71],{},"Music/Media Shuffling: Avoiding \"bad luck\" when clicking the shuffle button.",[66,73,74],{},"Procedural Generation: Games or simulations where uniform randomness looks artificial.",[28,76,78],{"id":77},"downsides","Downsides",[63,80,81,84],{},[66,82,83],{},"Performance: Slower than fisher-yates",[66,85,86],{},"Bias: Favors the center of the range",[28,88,90],{"id":89},"summary","Summary",[11,92,93],{},"While not a replacement for fisher-yates in most cases, the bates shuffle is a hidden gem for frontend devs aiming for natural-feeling randomness. Sometimes, math that looks less random ends up feeling more real.",{"title":95,"searchDepth":96,"depth":96,"links":97},"",2,[98,99,100,101,102],{"id":30,"depth":96,"text":31},{"id":53,"depth":96,"text":54},{"id":60,"depth":96,"text":61},{"id":77,"depth":96,"text":78},{"id":89,"depth":96,"text":90},"2025-07-22T00:00:00.000Z","When developers hear \"shuffle\", we usually think of the Fisher-Yates algorithm — and rightly so. It’s efficient, unbiased, and has been the gold standard for decades. But what if we need randomness that feels more natural?","md",null,{},true,"/article/bates-shuffle",{"title":6,"description":104},"article/bates-shuffle",[],"2nAqLbh9HWP9U2YsEv29vEovQ-2t7OxyIQC91W0e-m4",{"id":5,"title":6,"body":115,"date":103,"description":104,"extension":105,"image":106,"meta":170,"navigation":108,"path":109,"seo":171,"stem":111,"tags":172,"__hash__":113},{"type":8,"value":116,"toc":163},[117,121,125,127,133,137,139,141,143,151,153,159,161],[11,118,13,119,18],{},[15,120,17],{},[11,122,21,123,26],{},[23,124,25],{},[28,126,31],{"id":30},[11,128,34,129,38,131,43],{},[23,130,37],{},[40,132,42],{},[11,134,46,135,50],{},[23,136,49],{},[28,138,54],{"id":53},[11,140,57],{},[28,142,61],{"id":60},[63,144,145,147,149],{},[66,146,68],{},[66,148,71],{},[66,150,74],{},[28,152,78],{"id":77},[63,154,155,157],{},[66,156,83],{},[66,158,86],{},[28,160,90],{"id":89},[11,162,93],{},{"title":95,"searchDepth":96,"depth":96,"links":164},[165,166,167,168,169],{"id":30,"depth":96,"text":31},{"id":53,"depth":96,"text":54},{"id":60,"depth":96,"text":61},{"id":77,"depth":96,"text":78},{"id":89,"depth":96,"text":90},{},{"title":6,"description":104},[],1753180615513]