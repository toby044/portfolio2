[{"data":1,"prerenderedAt":347},["ShallowReactive",2],{"article":3},[4,317,332],{"id":5,"title":6,"body":7,"date":307,"description":308,"extension":309,"image":310,"meta":311,"navigation":72,"path":312,"seo":313,"stem":314,"tags":315,"__hash__":316},"article/article/bates-shuffle.md","Demystifying the Bates Shuffle: True Randomness",{"type":8,"value":9,"toc":300},"minimark",[10,19,27,32,44,51,55,257,260,264,277,281,289,293,296],[11,12,13,14,18],"p",{},"When developers hear \"shuffle\", we usually think of the Fisher-Yates algorithm — and rightly so. It’s efficient, unbiased, and has been the gold standard for decades. But what if we need randomness that feels more ",[15,16,17],"em",{},"natural","?",[11,20,21,22,26],{},"Enter the ",[23,24,25],"strong",{},"Bates Shuffle",".",[28,29,31],"h2",{"id":30},"what-is-the-bates-shuffle","What Is the Bates Shuffle?",[11,33,34,35,38,39,43],{},"The Bates Shuffle is derived from statistical methods, specifically from the ",[23,36,37],{},"Bates distribution",", which is formed by averaging ",[40,41,42],"code",{},"n"," uniform random variables. Instead of a flat random distribution like Fisher-Yates, this shuffle produces a smoother, bell-shaped randomness — similar to a Gaussian curve.",[11,45,46,47,50],{},"In web development, this can be useful in cases where ",[23,48,49],{},"uniform randomness looks \"too random\""," and jarring, especially in animations, transitions, or procedural content.",[28,52,54],{"id":53},"implementation","Implementation",[56,57,63],"pre",{"className":58,"code":59,"filename":60,"language":61,"meta":62,"style":62},"language-js shiki shiki-themes github-light github-dark","\nfunction batesShuffle(n, samples = 3) {\n    return Array.from({ length: n }, (_, i) => ({\n        index: i,\n        value: Array.from({ length: samples }, Math.random)\n        .reduce((a, b) => a + b) / samples,\n  }))\n    .sort((a, b) => a.value - b.value)\n    .map(item => item.index);\n}\n","bates-shuffle.js","js","",[40,64,65,74,108,140,146,157,196,202,232,251],{"__ignoreMap":62},[66,67,70],"span",{"class":68,"line":69},"line",1,[66,71,73],{"emptyLinePlaceholder":72},true,"\n",[66,75,77,81,85,89,92,95,98,101,105],{"class":68,"line":76},2,[66,78,80],{"class":79},"szBVR","function",[66,82,84],{"class":83},"sScJk"," batesShuffle",[66,86,88],{"class":87},"sVt8B","(",[66,90,42],{"class":91},"s4XuR",[66,93,94],{"class":87},", ",[66,96,97],{"class":91},"samples",[66,99,100],{"class":79}," =",[66,102,104],{"class":103},"sj4cs"," 3",[66,106,107],{"class":87},") {\n",[66,109,111,114,117,120,123,126,128,131,134,137],{"class":68,"line":110},3,[66,112,113],{"class":79},"    return",[66,115,116],{"class":87}," Array.",[66,118,119],{"class":83},"from",[66,121,122],{"class":87},"({ length: n }, (",[66,124,125],{"class":91},"_",[66,127,94],{"class":87},[66,129,130],{"class":91},"i",[66,132,133],{"class":87},") ",[66,135,136],{"class":79},"=>",[66,138,139],{"class":87}," ({\n",[66,141,143],{"class":68,"line":142},4,[66,144,145],{"class":87},"        index: i,\n",[66,147,149,152,154],{"class":68,"line":148},5,[66,150,151],{"class":87},"        value: Array.",[66,153,119],{"class":83},[66,155,156],{"class":87},"({ length: samples }, Math.random)\n",[66,158,160,163,166,169,172,174,177,179,181,184,187,190,193],{"class":68,"line":159},6,[66,161,162],{"class":87},"        .",[66,164,165],{"class":83},"reduce",[66,167,168],{"class":87},"((",[66,170,171],{"class":91},"a",[66,173,94],{"class":87},[66,175,176],{"class":91},"b",[66,178,133],{"class":87},[66,180,136],{"class":79},[66,182,183],{"class":87}," a ",[66,185,186],{"class":79},"+",[66,188,189],{"class":87}," b) ",[66,191,192],{"class":79},"/",[66,194,195],{"class":87}," samples,\n",[66,197,199],{"class":68,"line":198},7,[66,200,201],{"class":87},"  }))\n",[66,203,205,208,211,213,215,217,219,221,223,226,229],{"class":68,"line":204},8,[66,206,207],{"class":87},"    .",[66,209,210],{"class":83},"sort",[66,212,168],{"class":87},[66,214,171],{"class":91},[66,216,94],{"class":87},[66,218,176],{"class":91},[66,220,133],{"class":87},[66,222,136],{"class":79},[66,224,225],{"class":87}," a.value ",[66,227,228],{"class":79},"-",[66,230,231],{"class":87}," b.value)\n",[66,233,235,237,240,242,245,248],{"class":68,"line":234},9,[66,236,207],{"class":87},[66,238,239],{"class":83},"map",[66,241,88],{"class":87},[66,243,244],{"class":91},"item",[66,246,247],{"class":79}," =>",[66,249,250],{"class":87}," item.index);\n",[66,252,254],{"class":68,"line":253},10,[66,255,256],{"class":87},"}\n",[11,258,259],{},"Here, each index is given an averaged “random value” that dictates its position. More samples = smoother randomness.",[28,261,263],{"id":262},"when-should-you-use-it","When should you use it?",[265,266,267,271,274],"ul",{},[268,269,270],"li",{},"UI Animations: Staggering animations based on weighted randomness can appear more organic.",[268,272,273],{},"Music/Media Shuffling: Avoiding \"bad luck\" when clicking the shuffle button.",[268,275,276],{},"Procedural Generation: Games or simulations where uniform randomness looks artificial.",[28,278,280],{"id":279},"downsides","Downsides",[265,282,283,286],{},[268,284,285],{},"Performance: Slower than fisher-yates",[268,287,288],{},"Bias: Favors the center of the range",[28,290,292],{"id":291},"summary","Summary",[11,294,295],{},"While not a replacement for fisher-yates in most cases, the bates shuffle is a hidden gem for frontend devs aiming for natural-feeling randomness. Sometimes, math that looks less random ends up feeling more real.",[297,298,299],"style",{},"html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .s4XuR, html code.shiki .s4XuR{--shiki-default:#E36209;--shiki-dark:#FFAB70}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":62,"searchDepth":76,"depth":76,"links":301},[302,303,304,305,306],{"id":30,"depth":76,"text":31},{"id":53,"depth":76,"text":54},{"id":262,"depth":76,"text":263},{"id":279,"depth":76,"text":280},{"id":291,"depth":76,"text":292},"2025-07-22T00:00:00.000Z","When developers hear \"shuffle\", we usually think of the Fisher-Yates algorithm — and rightly so. It’s efficient, unbiased, and has been the gold standard for decades. But what if we need randomness that feels more natural?","md",null,{},"/article/bates-shuffle",{"title":6,"description":308},"article/bates-shuffle",[],"FPgUMKyUSvW8jWraZuJ5cz1Vb1uaeL4LuR5qoZ8q5Co",{"id":318,"title":319,"body":320,"date":310,"description":324,"extension":309,"image":310,"meta":327,"navigation":72,"path":328,"seo":329,"stem":330,"tags":310,"__hash__":331},"article/article/intro.md","Intro",{"type":8,"value":321,"toc":325},[322],[11,323,324],{},"Heyyyyyaaaayayayay",{"title":62,"searchDepth":76,"depth":76,"links":326},[],{},"/article/intro",{"title":319,"description":324},"article/intro","eoVXk46ku07lekkrIu--gwJshF3t_wix3JtgLesVFrs",{"id":333,"title":334,"body":335,"date":310,"description":339,"extension":309,"image":310,"meta":342,"navigation":72,"path":343,"seo":344,"stem":345,"tags":310,"__hash__":346},"article/article/whymeeeeeee.md","Whymeeeeeee",{"type":8,"value":336,"toc":340},[337],[11,338,339],{},"asdasdasdasd",{"title":62,"searchDepth":76,"depth":76,"links":341},[],{},"/article/whymeeeeeee",{"title":334,"description":339},"article/whymeeeeeee","tGFepjcY1QafgQPxna-DpHwv7hYYTXEsON1t0pTGhxs",1753179449867]